REDIRECTION
	//after redirection operator wildcard expansion only if wildcard expands to one filename else ambiguious input error

	HERE_DOC
		/quoted status of delimiter defines if variables in HERE_DOC are expanded or not.
		wildcards are not expanded in HERE_DOC
		//if var is delimiter var does not expand and is used with $var_name as delimiter.
		define t_node heredoc, define t_node delimiter, define t_node cmd (?!)
		start             in between         end
		<< END grep hello; grep << END hello;  grep hello << END;
		if << is 1st node: 1st word after delim is cmd (reset if multiple heredocs in a row)
		else 1st word in cmd list is cmd
		control operator resets counter


WILDCARD
	if wildcard expansion failed -> gives back string with wildcard character


& && & --> same memory used -> line 209 was true. added second check

grep hello && grep bye << END

reads heredoc for grep bye, buffers output
reads input for grep hello, when finished prints buffered output

executes cmd with heredoc first, and buffers.

VARIABLES
	copy env from bash, then use this as your own env. read var names from the copy.
	(do not use getenv)


PARSER
	parsing per pipeline! (not with lexer once at the beginning)
	ignore parts in (), execute them in subshell and pass exit status

var expandage once per pipeline! not for the whole input string!

export TEST=max
bash-3.2$ << END grep $TEST && export TEST=maximilian && << $TEST grep $TEST